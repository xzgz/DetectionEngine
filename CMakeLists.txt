cmake_minimum_required(VERSION 2.8.7)

project(CObjectFlow C CXX)

include(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0X)
if(COMPILER_SUPPORTS_CXX11)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
  message("Have set c++11.")
elseif(COMPILER_SUPPORTS_CXX0X)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
  message("Have set c++0x.")
else()
  message(STATUS "The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.")
endif()

# ---[ Using cmake scripts and modules
list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/Modules)

include(cmake/Utils.cmake)
include(cmake/Targets.cmake)

option(USE_OPENMP "use openmp" ON)
option(USE_LMDB "use lmdb" ON)

set(CObjectFlow_LINKER_LIBS "")
set(CObjectFlow_INCLUDE_DIRS "")
set(CObjectFlow_DEFINITIONS "")
set(CObjectFlow_COMPILE_OPTIONS "")
include(cmake/Dependencies.cmake)
include(${CAFFE_PATH}/share/Caffe/CaffeConfig.cmake)
#include(${OPENCV_PATH}/share/OpenCV/OpenCVConfig.cmake)

set(Caffe_INCLUDE_DIRS ${CAFFE_PATH}/include)
#set(Caffe_LIBRARIES ${CAFFE_PATH}/lib/libcaffe.so)
message("Caffe include dirs:")
foreach(val ${Caffe_INCLUDE_DIRS})
  message(${val})
endforeach()
message("Caffe libs:")
foreach(val ${Caffe_LIBRARIES})
  message(${val})
endforeach()

set(Protobuf_INCLUDE_DIR ${PROTOBUF_PATH}/include)
set(Protobuf_LIBRARIES ${PROTOBUF_PATH}/lib/libprotobuf.so)

set(Json_INCLUDE_DIR ${JSON_PATH}/include)
set(Json_LIBRARIES ${JSON_PATH}/lib/libjsoncpp.so)

set(Cnpy_INCLUDE_DIR ${CNPY_PATH}/include)
set(Cnpy_LIBRARIES ${CNPY_PATH}/lib/libcnpy.so)

list(APPEND CObjectFlow_INCLUDE_DIRS ${PROJECT_SOURCE_DIR}/include)
list(APPEND CObjectFlow_INCLUDE_DIRS ${Caffe_INCLUDE_DIRS})
list(APPEND CObjectFlow_INCLUDE_DIRS ${Protobuf_INCLUDE_DIR})
list(APPEND CObjectFlow_INCLUDE_DIRS ${Json_INCLUDE_DIR})
list(APPEND CObjectFlow_INCLUDE_DIRS ${Cnpy_INCLUDE_DIR})
list(APPEND CObjectFlow_INCLUDE_DIRS ${CUDA_PATH}/include)

list(APPEND CObjectFlow_LINKER_LIBS ${Caffe_LIBRARIES})
list(APPEND CObjectFlow_LINKER_LIBS ${Protobuf_LIBRARIES})
list(APPEND CObjectFlow_LINKER_LIBS ${Json_LIBRARIES})
list(APPEND CObjectFlow_LINKER_LIBS ${Cnpy_LIBRARIES})

message("OpenCV include dirs:")
foreach(val ${OpenCV_INCLUDE_DIRS})
  message(${val})
endforeach()
message("OpenCV libs:")
foreach(val ${OpenCV_LIBS})
  message(${val})
endforeach()

include_directories(${CObjectFlow_INCLUDE_DIRS})
#link_directories(${CUDA_PATH}/lib64)

message("CObjectFlow include dirs:")
foreach(val ${CObjectFlow_INCLUDE_DIRS})
  message(${val})
endforeach()
message("CObjectFlow libs:")
foreach(val ${CObjectFlow_LINKER_LIBS})
  message(${val})
endforeach()

add_subdirectory(src/utils)
add_subdirectory(src/core)
add_subdirectory(src/anchor_heads)
add_subdirectory(src/bbox_heads)
add_subdirectory(src/roi_extractors)
add_subdirectory(src/detectors)
add_subdirectory(src/inference)
add_subdirectory(test)
